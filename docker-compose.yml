
# Docker Compose Corrigido v2 - Krayin CRM
# Solução para o problema de Gateway Timeout por alternância de clientes (Keep-Alive)

version: "3.9"

services:
  krayin-php-apache:
    build:
      args:
        container_project_path: /var/www/html/
        uid: 1519
        user: ${USER}
      context: .
      dockerfile: ./Dockerfile
    
    image: krayin-crm-${CLIENT_ID}:${VERSION:-latest}
    
    volumes:
      - krayin-storage:/var/www/html/storage
    
    depends_on:
      krayin-mysql:
        condition: service_healthy
    
    environment:
      # ... (suas variáveis de ambiente)
    
    networks:
      - krayin-network
      - proxy-public-network
    
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    labels:
      # --- Configurações Padrão do Traefik (gerenciadas pelo Coolify ou manuais) ---
      - "traefik.enable=true"
      - "traefik.http.routers.krayin-${CLIENT_ID}.rule=Host(`${CLIENT_FQDN}`)"
      - "traefik.http.routers.krayin-${CLIENT_ID}.entrypoints=websecure"
      - "traefik.http.routers.krayin-${CLIENT_ID}.tls.certresolver=letsencrypt"
      - "traefik.http.services.krayin-${CLIENT_ID}.loadbalancer.server.port=80"

      # --- ✅ CORREÇÃO PARA O PROBLEMA DE KEEP-ALIVE ---

      # 1. Define um perfil de transporte customizado chamado 'krayin-transport'
      #    Este perfil instrui o Traefik a ser mais conservador com o reuso de conexões.
      
      # Limita o número de conexões inativas (idle) que o Traefik mantém para cada backend.
      # Força a criação de novas conexões com mais frequência, evitando o reuso de conexões "mortas".
      - "traefik.http.serversTransports.krayin-transport.maxIdleConnsPerHost=1"
      
      # Define um timeout curto para conexões inativas. Garante que o Traefik feche a conexão
      # antes ou logo depois do Apache, evitando o estado de "half-closed".
      - "traefik.http.serversTransports.krayin-transport.forwardingTimeouts.idleConnTimeout=10s"

      # 2. Associa o serviço deste container ao perfil de transporte criado acima.
      #    O sufixo '@docker' informa ao Traefik que a definição está no provedor Docker (via labels).
      - "traefik.http.services.krayin-${CLIENT_ID}.loadbalancer.serversTransport=krayin-transport@docker"

  # ... (demais serviços: krayin-mysql, krayin-redis, etc. permanecem inalterados)
  
  krayin-mysql:
    image: mysql:8.0
    # ... (configuração inalterada)

  krayin-redis:
    image: redis:6.2-alpine
    # ... (configuração inalterada)

  # ... (etc.)

volumes:
  krayin-storage:

networks:
  krayin-network:
    external: true
    name: krayin-network-${REDE_INTERNA}
  
  proxy-public-network:
    external: true

